/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutMouseIndexImport } from './routes/_layout/mouse/index'
import { Route as LayoutKeyboardsIndexImport } from './routes/_layout/keyboards/index'
import { Route as LayoutHeadphoneIndexImport } from './routes/_layout/headphone/index'
import { Route as LayoutAccessoriesIndexImport } from './routes/_layout/accessories/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutMouseIndexRoute = LayoutMouseIndexImport.update({
  path: '/mouse/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutKeyboardsIndexRoute = LayoutKeyboardsIndexImport.update({
  path: '/keyboards/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHeadphoneIndexRoute = LayoutHeadphoneIndexImport.update({
  path: '/headphone/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAccessoriesIndexRoute = LayoutAccessoriesIndexImport.update({
  path: '/accessories/',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/accessories/': {
      id: '/_layout/accessories/'
      path: '/accessories'
      fullPath: '/accessories'
      preLoaderRoute: typeof LayoutAccessoriesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/headphone/': {
      id: '/_layout/headphone/'
      path: '/headphone'
      fullPath: '/headphone'
      preLoaderRoute: typeof LayoutHeadphoneIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/keyboards/': {
      id: '/_layout/keyboards/'
      path: '/keyboards'
      fullPath: '/keyboards'
      preLoaderRoute: typeof LayoutKeyboardsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/mouse/': {
      id: '/_layout/mouse/'
      path: '/mouse'
      fullPath: '/mouse'
      preLoaderRoute: typeof LayoutMouseIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAccessoriesIndexRoute,
    LayoutHeadphoneIndexRoute,
    LayoutKeyboardsIndexRoute,
    LayoutMouseIndexRoute,
  }),
  AboutLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/accessories/",
        "/_layout/headphone/",
        "/_layout/keyboards/",
        "/_layout/mouse/"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_layout/accessories/": {
      "filePath": "_layout/accessories/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/headphone/": {
      "filePath": "_layout/headphone/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/keyboards/": {
      "filePath": "_layout/keyboards/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/mouse/": {
      "filePath": "_layout/mouse/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
